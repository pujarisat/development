<!-- Copyright FUJITSU LIMITED 2016-->
<!DOCTYPE project SYSTEM "../../dtd/Project.dtd">
<project default="testUserCustomer" xmlns:setup="antlib:org.oscm.webtest.setup">
  <import file="../../macros/marketplace/all.xml" />

  <target name="setup">
    <webtest name="testMPL_UserCustomer_Setup">
      <!-- Setup an organization (using old portal) -->
      <scenario.setupSupplier />
      <operator.createMarketplace mIdProperty="mId" name="Global Marketplace" />
      <landingpage.setSortOrderForLandingpageWithLogin mId="${mId}" />

      <storeProperty name="supplierUrl" value="${supplierUrl}" propertyType="ant" />
      <storeProperty name="supplierUserId" value="${supplierUserId}" propertyType="ant" />
      <storeProperty name="supplierId" value="#{orgId}" propertyType="ant" />
      <operator.addSupplierToGlobalMarketplace supplierId="${supplierId}" marketplaceId="${mId}" />

      <!-- Register a customer (using web service) -->
      <setup:accountservice.registerCustomer supplierId="${supplierId}" userId="customer" marketplaceId="${mId}" />

      <mail.readConfirmUrlFromMail />
      <invoke url="#{confirmUrl}" />
      <clickLink htmlId="confirmForm:continueLink" />

      <property name="customerUserId" value="${createdUserId}" />
    </webtest>
  </target>

  <target name="testUserCustomer" depends="setup">

    <webtest name="testMPL_LoginFromBluePortal">
      <!-- Verify the customer can be used -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />
      <mpl_login.logout />

      <!--
      
      Login to the bule protal with the user ID
      
      FIXME: This test fails as it needs additional preparations steps
      - Delete marketplace cookie, to avoid mId is read from there
      - ensure that no error redirect URL is configured in configuration settings, otherwise this will be used
      
      <login.login url="${supplierUrl}" userId="${customerUserId}" verifyPortalUserId="false" />
   
      <verifyXPath xpath="//h2[@id='mpErrorPageMsg']/text()" 
        text="The entered marketplace URL is not valid. If you do not know the marketplace ID, contact the marketplace owner.*"
        regex="true"/>
	 -->

    </webtest>

    <webtest name="testMPL_UserCustomer_CreateUser">
      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />

      <!-- Switch to account / users page -->
      <mpl_goto.account.users />

      <!-- Create some new users -->
      <mpl_user.create userId="operFL" firstname="first" lastname="last" />
      <property name="userIdOperFL" value="#{userId}" />

      <mpl_user.create userId="operF" firstname="first" lastname="" />
      <property name="userIdOperF" value="#{userId}" />

      <mpl_user.create userId="operL" firstname="" lastname="last" />
      <property name="userIdOperL" value="#{userId}" />

      <mpl_user.create userId="oper" firstname="" lastname="" />
      <property name="userIdOper" value="#{userId}" />

      <!-- Verify user roles registered -->
      <mpl_user.display userId="#{userId}" />
      <mpl_user.verifyUserRoleCheckBox roleDisplayName="${UserRoleType.ORGANIZATION_ADMIN}" isChecked="false" />
      <mpl_user.verifyUserRoleCheckBox roleDisplayName="${UserRoleType.SUBSCRIPTION_MANAGER}" isChecked="false" />

      <!-- Verify user roles invisible on user create-->
      <mpl_goto.account.users />
      <clickLink htmlId="userListForm:addUserButtonLink" />
      <mpl_verify.contentTitle title="Add user" />
      <mpl_user.verifyUserRoleCheckBox roleDisplayName="${UserRoleType.SERVICE_MANAGER}" visible="false" />
      <mpl_user.verifyUserRoleCheckBox roleDisplayName="${UserRoleType.TECHNOLOGY_MANAGER}" visible="false" />
      <mpl_user.verifyUserRoleCheckBox roleDisplayName="${UserRoleType.PLATFORM_OPERATOR}" visible="false" />

      <!-- And logoff -->
      <mpl_login.logout />
      <mail.cleanInbox />
    </webtest>

    <webtest name="testMPL_UserCustomer_CreateAdminUser">
      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />

      <!-- Switch to account / users page -->
      <mpl_goto.account.users />

      <!-- Create a new admin user -->
      <mpl_user.create userId="oper2A" isAdmin="true" />

      <!-- Verify user roles registered -->
      <mpl_user.display userId="#{userId}" />
      <mpl_user.verifyUserRoleCheckBox roleDisplayName="${UserRoleType.ORGANIZATION_ADMIN}" isChecked="true" />
      <mpl_user.verifyUserRoleCheckBox roleDisplayName="${UserRoleType.SUBSCRIPTION_MANAGER}" isChecked="false" />

      <!-- Verify user roles invisible on user create-->
      <mpl_user.verifyUserRoleCheckBox roleDisplayName="${UserRoleType.SERVICE_MANAGER}" visible="false" />
      <mpl_user.verifyUserRoleCheckBox roleDisplayName="${UserRoleType.TECHNOLOGY_MANAGER}" visible="false" />
      <mpl_user.verifyUserRoleCheckBox roleDisplayName="${UserRoleType.PLATFORM_OPERATOR}" visible="false" />

      <!-- And logoff -->
      <mpl_login.logout />
      <mail.cleanInbox />
    </webtest>

    <webtest name="testMPL_UserCustomer_CreateDuplicateUser">
      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />

      <!-- Switch to account / users page -->
      <mpl_goto.account.users />

      <!-- Create a user with an already existing name (must fail) -->
      <mpl_user.create userId="${userIdOper}" createUniqueUserId="false" submit="false" />
      <clickButton label="${button.save}" />
      <mpl_verify.error label="The user ID ${userIdOper} already exists." />

      <!-- And logoff -->
      <mpl_login.logout />
    </webtest>

    <webtest name="testMPL_UserCustomer_CreateUserCheckInvalidFieldValues">
      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />

      <!-- Check all editable fields -->
      <dataDriven tableContainer="data/pageFields/marketplace/accountAddUserFields.xls">
        <!-- Switch to account / users page and prepare default content -->
        <mpl_goto.account.users />
        <mpl_user.create userId="oper3" submit="false" createUniqueUserId="false" />
        <!-- Validate all registered fields -->
        <mpl_verify.checkHintAndFieldValues hintMsgKey="${hintMsgKey}" fieldId="${fieldId}" fieldType="${fieldType}" required="${required}" />
      </dataDriven>

      <!-- And logoff -->
      <mpl_login.logout />
    </webtest>

    <webtest name="testMPL_UserCustomer_EditUser">
      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />

      <!-- Edit some user  -->
      <mpl_goto.account.users />

      <mpl_user.editInputValue userId="${userIdOperFL}" fieldId="editUserForm:firstName" fieldValue="changed first" />
      <mpl_user.editInputValue userId="${userIdOperFL}" fieldId="editUserForm:lastName" fieldValue="changed last" />
      <mpl_user.editInputValue userId="${userIdOperFL}" fieldId="editUserForm:email" fieldValue="CHG${common.email}" />
      <mpl_user.editInputValue userId="${userIdOperFL}" fieldId="editUserForm:userId" fieldValue="${userIdOperFL}_changed" isUserIdField="true" />
      <mpl_user.editSelectionValue userId="${userIdOperFL}" fieldId="editUserForm:salutation" fieldValue="${user.salutation.MS}" />
      <mpl_user.editCheckboxValueByXPath userId="${userIdOperFL}" fieldXpath="//td[text()='${UserRoleType.ORGANIZATION_ADMIN}']/..//input" fieldValue="true" />
      <mpl_user.editCheckboxValueByXPath userId="${userIdOperFL}" fieldXpath="//td[text()='${UserRoleType.ORGANIZATION_ADMIN}']/..//input" fieldValue="false" />
      <mpl_user.editCheckboxValueByXPath userId="${userIdOperFL}" fieldXpath="//td[text()='${UserRoleType.SUBSCRIPTION_MANAGER}']/..//input" fieldValue="true" />
      <mpl_user.editCheckboxValueByXPath userId="${userIdOperFL}" fieldXpath="//td[text()='${UserRoleType.SUBSCRIPTION_MANAGER}']/..//input" fieldValue="false" />
      <!-- Edit other users (check title) -->
      <mpl_goto.account.users />
      <mpl_user.display userId="${userIdOperF}" />
      <mpl_verify.contentTitle title="Edit user first" />

      <mpl_goto.account.users />
      <mpl_user.display userId="${userIdOperL}" />
      <mpl_verify.contentTitle title="Edit user last" />

      <mpl_goto.account.users />
      <mpl_user.display userId="${userIdOper}" />
      <mpl_verify.contentTitle title="Edit user ${userIdOper}" />

      <!-- And logoff -->
      <mpl_login.logout />
      <mail.cleanInbox />
    </webtest>

    <webtest name="testMPL_UserCustomer_EditUserCheckInvalidFieldValues">
      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />

      <!-- Check all editable fields -->
      <dataDriven tableContainer="data/pageFields/marketplace/accountEditUserFields.xls">
        <!-- Switch to account / users page and display an registered user -->
        <mpl_goto.account.users />
        <mpl_user.display userId="${userIdOperFL}" />
        <!-- Validate all registered fields -->
        <mpl_verify.invalidFieldValue fieldId="${fieldId}" fieldType="${fieldType}" required="${required}" topErrorMessage="false" />
      </dataDriven>

      <!-- And logoff -->
      <mpl_login.logout />
    </webtest>

    <webtest name="testMPL_UserCustomer_EditUserResetPassword">
      <mail.cleanInbox />

      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />

      <!-- Switch to account / users page -->
      <mpl_goto.account.users />

      <!-- Check validation of field values -->
      <mpl_user.display userId="${userIdOperL}" />
      <clickLink label="${button.resetPwd}" />
      <mpl_verify.success label="${info.user.pwdReset}" />

      <!-- And logoff -->
      <mpl_login.logout />

      <!-- Check whether an e-mail has been received -->
      <mail.readResetPasswordFromMail />

      <mpl_login.user mid="${mId}" userId="${userIdOperL}" password="#{userPwd}" verifyWelcomeText="false" />
      <!-- check that change password page is shown while temporary password is in place -->
      <mpl_goto.services mid="${mId}" />

      <setInputField name="passwordForm:currentPassword" value="#{userPwd}" />
      <setInputField name="passwordForm:password" value="Secret" />
      <setInputField name="passwordForm:password2" value="Secret" />
      <clickLink description="Submit changed password" htmlId="passwordForm:changeButtonLink" />

      <mpl_verify.breadCrumb actualPage="${marketplace.services.title}" />
      <mpl_login.logout />
    </webtest>

    <webtest name="testMPL_UserCustomer_DeleteUser">
      <mail.cleanInbox />

      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />

      <!-- Switch to account / users page -->
      <mpl_goto.account.users />
      <mpl_user.display userId="${userIdOperL}" />

      <!-- Select 'DELETE' but cancel -->
      <mpl_verify.contentTitle title="Edit user last" />
      <clickLink label="${button.delete}" />
      <mpl_user.confirmPanel title="${marketplace.account.delete.title}" confirm="false" />
      <mpl_verify.contentTitle title="Edit user last" />

      <!-- Select 'DELETE' and confirm -->
      <clickLink label="${button.delete}" />
      <mpl_user.confirmPanel title="${marketplace.account.delete.title}" confirm="true" />
      <not>
        <mpl_verify.contentTitle title="Edit user last" />
      </not>
      <mpl_verify.contentTitle title="${marketplace.account.users.title.management}" />
      <not>
        <verifyXPath xpath="//span[@class='selectable' and contains(text(),'@{userIdOperL}')]" />
      </not>
    </webtest>

    <webtest name="testMPL_UserCustomer_EditProfile">
      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />

      <!-- Check all editable fields -->
      <dataDriven tableContainer="data/pageFields/marketplace/accountEditProfileFields.xls">
        <!-- Switch to account / profile page -->
        <mpl_goto.account.profile />
        <!-- Validate all registered fields -->
        <mpl_goto.tab label="${marketplace.account.profile.userTab}" />
        <mpl_verify.invalidFieldValue fieldId="${fieldId}" fieldType="${fieldType}" required="${required}" topErrorMessage="false" />
      </dataDriven>

      <!-- And logoff -->
      <mpl_login.logout />
    </webtest>

    <webtest name="testMPL_UserCustomer_ChangePassword">
      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />

      <!-- Switch to account / profile page -->
      <mpl_goto.account.profile />
      <!-- Invoke change / password -->
      <clickLink label="${button.changePassword}" />
      <!-- Check label (bug #7507) -->
      <verifyText description="${user.pwd.title}" text="${user.pwd.title}" />
      <!-- Verify that the token has this exact name (passwordChangeToken) since redirect depends on checking this field -->
      <verifyXPath xpath="//input[@id='passwordForm:passwordChangeToken']" />
      <!-- Set fields  -->
      <setInputField name="passwordForm:currentPassword" value="secret" />
      <setInputField name="passwordForm:password" value="secret2" />
      <setInputField name="passwordForm:password2" value="secret2" />
      <!-- And change -->
      <clickLink htmlId="passwordForm:changeButtonLink" />
      <clickElement htmlId="cancelModelPanelForm:cancelButton" />
      <!-- And reset -->
      <clickLink label="${button.changePassword}" />
      <!-- Set fields  -->
      <setInputField name="passwordForm:currentPassword" value="secret2" />
      <setInputField name="passwordForm:password" value="secret" />
      <setInputField name="passwordForm:password2" value="secret" />
      <!-- And change -->
      <clickLink htmlId="passwordForm:changeButtonLink" />
      <clickElement htmlId="cancelModelPanelForm:cancelButton" />

      <!-- And logoff -->
      <mpl_login.logout />
      <mail.cleanInbox />
    </webtest>


    <webtest name="testMPL_UserCustomer_ChangePasswordReopen_B7508">

      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />

      <!-- Switch to account / profile page -->
      <mpl_goto.account.profile />
      <!-- Invoke change / password -->
      <clickLink label="${button.changePassword}" />
      <!-- Check label (bug #7507) -->
      <verifyText description="${user.pwd.title}" text="${user.pwd.title}" />
      <!-- Set fields  -->
      <setInputField name="passwordForm:currentPassword" value="secret" />
      <setInputField name="passwordForm:password" value="secret2" />
      <setInputField name="passwordForm:password2" value="secret_wrong" />
      <!-- And change -->
      <clickLink htmlId="passwordForm:changeButtonLink" />
      <mpl_verify.fieldError fieldId="passwordForm:password" label="${error.user.pwdMatch}" />
      <mpl_verify.fieldError fieldId="passwordForm:password2" label="${error.user.pwdMatch}" />

      <!-- Close mask -->
      <clickElement htmlId="cancelModelPanelForm:cancelButton" />

      <!-- Reopen mask and check whether problems are gone  -->
      <clickLink label="${button.changePassword}" />
      <not>
        <mpl_verify.fieldError fieldId="passwordForm:password" label="${error.user.pwdMatch}" />
      </not>
      <not>
        <mpl_verify.fieldError fieldId="passwordForm:password2" label="${error.user.pwdMatch}" />
      </not>

      <!-- And logoff -->
      <mpl_login.logout />

    </webtest>

    <webtest name="testMPL_UserCustomer_accountPage">
      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />

      <!-- Switch to edit profile page -->
      <mpl_goto.account.profile />

      <mpl_goto.tab label="${marketplace.account.profile.userTab}" />
      
      <setInputField name="userForm:lastName" value="Blunt" />
      <setInputField name="userForm:firstName" value="James" />

      <!-- And change -->
      <clickLink htmlId="userForm:saveUserButtonLink" />

      <mpl_verify.success label="${info.user.profileSaved}" />

      <!-- Switch to account page -->
      <mpl_goto.account />

      <storeXPath xpath="//*[@id='userName']" property="nameString" propertyType="dynamic" />
      <verifyProperty name="nameString" text=".*James Blunt.*" regex="true" />

      <repeat count="4">
        <clickLink htmlId="reportLink#{count}" />
        <mpl_verify.contentTitle title="${marketplace.account.reports.title}" />
        <verifyXPath xpath="//*[@id='reportFrame']" />
        <mpl_goto.account />
      </repeat>

      <clickLink htmlId="showSubscriptionsButton" />
      <mpl_verify.breadCrumb actualPage="${marketplace.account.subscriptions.title}" />
      <mpl_goto.account />

      <clickLink htmlId="showUsersButton" />
      <mpl_verify.contentTitle title="${marketplace.account.users.title.management}" />
      <mpl_verify.breadCrumb actualPage="${marketplace.account.users.title}" />
      <mpl_goto.account />

      <clickLink htmlId="editProfileButton" />
      <mpl_verify.contentTitle title="${marketplace.account.profile.title}" />
      <mpl_verify.breadCrumb actualPage="${marketplace.account.profile.title}" />
      <mpl_goto.account />

      <clickLink htmlId="showReportsButton" />
      <mpl_verify.contentTitle title="${marketplace.account.reports.title}" />
      <mpl_verify.breadCrumb actualPage="${marketplace.account.reports.title}" />
      <mpl_goto.account />

      <!-- And logoff -->
      <mpl_login.logout />
    </webtest>

  	<webtest name="testMPL_AssignSubscriptionsToUser_B7744">
      <!-- setup data-->
      <mail.cleanInbox />
      <operator.createorganization />
      <mail.readPasswordAndUrlFromMail />
      <operator.addSupplierToGlobalMarketplace marketplaceId="${mId}" supplierId="#{orgId}" baseurl="#{baseUrl}" />
      <login.initialLoginAndChangePassword url="#{orgUrl}" userId="#{userId}" password="#{userPwd}" />
      <storeProperty name="supplierUrl" value="#{orgUrl}" propertyType="ant" />
      <storeProperty name="supplierUserId" value="#{userId}" propertyType="ant" />
      <storeProperty name="supplierUserKey" value="#{userKey}" propertyType="ant" />
      <login.logout />

      <storeProperty name="namedUser" value="1" />

      <!-- Create new services -->
      <login.login url="#{orgUrl}" userId="#{userId}" />
      <techservice.import file="data/TechnicalServicesForVisibilityTest.xml" />
      <setup:store.settings userkey="#{userKey}" password="secret" />
      <setup:service.define  serviceId="S1" name="MS S1" techServiceId="S1" description="Limited evaluation version." marketplaceId="${mId}" useParameters="true" namedUser="#{namedUser}" svcKeyProperty="svcKey1"/>
      <setup:pricemodel.define serviceId="S1" isFree="true" />
      <setup:service.define serviceId="S2" name="MS S2" techServiceId="S2" description="Limited evaluation version." marketplaceId="${mId}" useParameters="false" svcKeyProperty="svcKey2"/>
      <setup:pricemodel.define serviceId="S2" isFree="true" />
      <setup:service.define serviceId="S3" name="MS S3" techServiceId="S3" description="Limited evaluation version." marketplaceId="${mId}" useParameters="false" svcKeyProperty="svcKey3"/>
      <setup:pricemodel.define serviceId="S3" isFree="true" />
      <setup:service.activate serviceIds="S" start="1" count="3" />
      <login.logout />

      <mpl_login.user mid="${mId}" userId="#{userId}" />
      <!-- Subscribe services -->
      <setup:subscription.create subId="subscribeUserService1" marketplaceId="${mId}" serviceKey="${svcKey1}" />
      <setup:subscription.create subId="subscribeUserService2" marketplaceId="${mId}" serviceKey="${svcKey2}" />
      <setup:subscription.create subId="userService1" marketplaceId="${mId}" serviceKey="${svcKey1}" />
      <setup:subscription.create subId="userService2" marketplaceId="${mId}" serviceKey="${svcKey1}" />
      <setup:subscription.create subId="subRoleService1" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService2" marketplaceId="${mId}" serviceKey="${svcKey3}" />

      <!-- Switch to account / users page and create a new user-->
      <mpl_goto.account.users />
      <mpl_user.create userId="a" firstname="a" lastname="a" />
      <storeProperty name="usernameA" value="#{userId}" propertyType="ant" />
      <mpl_user.create userId="b" firstname="b" lastname="b" />
      <storeProperty name="usernameB" value="#{userId}" propertyType="ant" />

      <!-- Assign subscriptions to user a and verify -->
      <mpl_user.display userId="${usernameA}" />
      <storeXPath xpath="//*[@id='editUserForm:userId']/@value" property="userIdA" />
      <setCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService1:assignCheckbox" checked="true" />
      <setCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox" checked="true" />
      <clickLink htmlId="editUserForm:saveButtonLink" />
      <common.handleMessageParameters property="infoMsg" value="${info.user.saved}" att0="#{userIdA}" />
      <common.verifySuccess label="#{infoMsg}" />

      <mpl_user.display userId="${usernameA}" />
      <verifyCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService1:assignCheckbox" checked="true" />
      <verifyCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox" checked="true" />
      <clickLink htmlId="editUserForm:cancelButton" />
      <verifyText description="${marketplace.account.leavePage.title}" text="${marketplace.account.leavePage.title}" />
      <clickLink label="${button.yes}" />

      <!-- Assign subscriptions to user b and verify -->
      <mpl_user.display userId="${usernameB}" />
      <setCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService1:assignCheckbox" checked="true" />
      <setCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox" checked="true" />

      <clickLink htmlId="editUserForm:saveButtonLink" />

      <common.handleMessageParameters property="errorMsg" value="${ex.ServiceParameterException.PLATFORM_PARAMETER.NAMED_USER}" att0="#{namedUser}" att1="subscribeUserService1" />
      <common.verifyError label="#{errorMsg}" />

      <clickLink htmlId="editUserForm:cancelButton" />
      <verifyText description="${marketplace.account.leavePage.title}" text="${marketplace.account.leavePage.title}" />
      <clickLink label="${button.yes}" />
      <mpl_user.display userId="${usernameB}" />
      <verifyCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService1:assignCheckbox" checked="false" />
      <verifyCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox" checked="false" />

      <login.logout />

      <mail.cleanInbox />
    </webtest>

    <webtest name="Test for bad case customer logs in to blue portal.">
      <login.loginAsSupplier url="${supplierUrl}" userId="${supplierUserId}" />

      <user.registerCustomer marketplaceId="${mId}" userId="customer" />
      <login.logout />
      <mail.readPasswordAndUrlFromMail />
      <mpl_login.loginWithChangePassword mid="${mId}" userId="#{userId}" oldPassword="#{userPwd}" />
      <mpl_login.logout />

      <selectWebClient name="Test for bad case customer logs in to blue portal.">
        <invoke url="${supplierUrl}" />
        <invoke url="${supplierUrl}/user/add.jsf" />
        <setInputField htmlId="userId" value="#{userId}" />
        <setInputField name="password" value="secret" />
        <clickButton htmlId="loginButton" />
        <verifyXPath xpath="//*[@id='mpErrorPageLabel']/text()" text=" Error" />
      </selectWebClient>
    </webtest>

    <webtest name="testMPL_UserCustomer_EditUser_Bug10052">
      <mail.cleanInbox />
      <!-- Login as customer -->
      <mpl_login.user mid="${mId}" userId="${customerUserId}" />
      <!-- Switch to account / profile page -->
      <mpl_goto.account.profile />
      <!-- Invoke change / password -->
      <clickLink label="${button.changePassword}" />
      <verifyText description="${user.pwd.title}" text="${user.pwd.title}" />
      <!-- Verify that the token has this exact name (passwordChangeToken) since redirect depends on checking this field -->
      <verifyXPath xpath="//input[@id='passwordForm:passwordChangeToken']" />
      <!-- Set fields  -->
      <setInputField name="passwordForm:currentPassword" value="wrongSecret" />
      <setInputField name="passwordForm:password" value="secret2" />
      <setInputField name="passwordForm:password2" value="secret2" />
      <!-- And change -->
      <clickLink htmlId="passwordForm:changeButtonLink" />
      <verifyElementText htmlId="errorMessages22" text="${error.changePassword}" />
      <clickElement htmlId="cancelModelPanelForm:cancelButton" />
      <clickButton label="${button.save}" />
      <mpl_verify.success label="${info.user.profileSaved}" />
    </webtest>

  	<webtest name="testMPL_EditUser_SubscriptionAssignments_VerifyIdFiltering">
  	  <mpl_login.user mid="${mId}" userId="${supplierUserId}" />

  	  <mpl_goto.account.users />
  	  <mpl_user.display userId="${usernameB}" />
  	  <storeXPath xpath="//*[@id='editUserForm:userId']/@value" property="userIdB" />

  	  <!-- Verify subscriptions list (all subscriptions are visible)-->
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subscribeUserService1:assignCheckbox']"  />
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox']"  />
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:userService1:assignCheckbox']"  />
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:userService2:assignCheckbox']"  />
	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subRoleService1:assignCheckbox']"  />
	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subRoleService2:assignCheckbox']"  />

  	  <!-- Filter out subscriptions which id not starts with 'user' -->
  	  <setInputField htmlId="editUserForm:subscriptionTable:id" value="user" />

  	  <!-- Verify subscriptions list (only subscriptions with id starting with 'user' are visible)-->
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:userService1:assignCheckbox']"  />
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:userService2:assignCheckbox']"  />
  	  <not>
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subscribeUserService1:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subRoleService1:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subRoleService2:assignCheckbox']"  />
	  </not>

  	</webtest>

  	<webtest name="testMPL_EditUser_SubscriptionAssignments_VerifyRoleFiltering">
  	  <mpl_login.user mid="${mId}" userId="${supplierUserId}" />

  	  <mpl_goto.account.users />
  	  <mpl_user.display userId="${usernameB}" />
  	  <storeXPath xpath="//*[@id='editUserForm:userId']/@value" property="userIdB" />

  	  <!-- Verify subscriptions list (all subscriptions are visible)-->
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subscribeUserService1:assignCheckbox']"  />
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox']"  />
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:userService1:assignCheckbox']"  />
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:userService2:assignCheckbox']"  />
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subRoleService1:assignCheckbox']"  />
      <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subRoleService2:assignCheckbox']"  />

  	  <!-- Assign subscriptions to make roles selection visible -->
  	  <setCheckbox htmlId="editUserForm:subscriptionTable:subRoleService1:assignCheckbox" checked="true" />
  	  <setCheckbox htmlId="editUserForm:subscriptionTable:subRoleService2:assignCheckbox" checked="true" />

  	  <!-- Filter subscriptions with role 'User' -->
  	  <setInputField htmlId="editUserForm:subscriptionTable:selectedRole" value="User" />

  	  <!-- Verify subscriptions list (only subscriptions with role 'User' are visible)-->
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subRoleService1:assignCheckbox']"  />
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subRoleService2:assignCheckbox']"  />
  	  <not>
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subscribeUserService1:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:userService1:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:userService2:assignCheckbox']"  />
	  </not>

  	  <!-- Change subscription's role -->
  	  <setSelectField htmlId="editUserForm:subscriptionTable:subRoleService1:role" optionIndex="1" />

  	  <!-- Filter subscriptions with role 'Administrator' -->
  	  <setInputField htmlId="editUserForm:subscriptionTable:selectedRole" value="Admin" />

	  <!-- Verify subscriptions list (only subscriptions with role 'Administrator' are visible)-->
  	  <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subRoleService1:assignCheckbox']"  />
  	  <not>
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subRoleService2:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subscribeUserService1:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:userService1:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:userService2:assignCheckbox']"  />
	  </not>

  	</webtest>

  	<webtest name="testMPL_EditUser_SubscriptionAssignments_Bug12419">
  	  <mpl_login.user mid="${mId}" userId="${supplierUserId}" />

  	  <mpl_goto.account.users />
  	  <mpl_user.display userId="${usernameB}" />
  	  <storeXPath xpath="//*[@id='editUserForm:userId']/@value" property="userIdB" />

  	  <setCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox" checked="true" />
      <clickLink htmlId="editUserForm:saveButtonLink" />
  	  <common.handleMessageParameters property="infoMsg" value="${info.user.saved}" att0="#{userIdB}" />
  	  <common.verifySuccess label="#{infoMsg}" />

  	  <!-- Verify subscriptions assigned to #{userIdB} -->
  	  <mpl_user.display userId="${usernameB}" />
  	  <verifyCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService1:assignCheckbox" checked="false" />
  	  <verifyCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox" checked="true" />
  	  <verifyCheckbox htmlId="editUserForm:subscriptionTable:userService1:assignCheckbox" checked="false" />
      <verifyCheckbox htmlId="editUserForm:subscriptionTable:userService2:assignCheckbox" checked="false" />
  	  <verifyCheckbox htmlId="editUserForm:subscriptionTable:subRoleService1:assignCheckbox" checked="false" />
  	  <verifyCheckbox htmlId="editUserForm:subscriptionTable:subRoleService2:assignCheckbox" checked="false" />

  	  <!-- Filter out all subscriptions -->
  	  <setInputField htmlId="editUserForm:subscriptionTable:id" value="Empty Sub" />

  	  <!-- Verify subscriptions list is empty -->
  	  <not description="Subscriptions list is empty">
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subscribeUserService1:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:userService1:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:userService2:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subRoleService1:assignCheckbox']"  />
  	    <verifyXPath xpath="//*[@id='editUserForm:subscriptionTable:subRoleService2:assignCheckbox']"  />
	  </not>

  	  <!-- Save user} -->
  	  <clickLink htmlId="editUserForm:saveButtonLink" />

  	  <!-- Verify subscriptions are still assigned to #{userIdB} -->
  	  <mpl_user.display userId="${usernameB}" />
  	  <verifyCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService1:assignCheckbox" checked="false" />
  	  <verifyCheckbox htmlId="editUserForm:subscriptionTable:subscribeUserService2:assignCheckbox" checked="true" />
  	  <verifyCheckbox htmlId="editUserForm:subscriptionTable:userService1:assignCheckbox" checked="false" />
  	  <verifyCheckbox htmlId="editUserForm:subscriptionTable:userService2:assignCheckbox" checked="false" />
  	  <verifyCheckbox htmlId="editUserForm:subscriptionTable:subRoleService1:assignCheckbox" checked="false" />
  	  <verifyCheckbox htmlId="editUserForm:subscriptionTable:subRoleService2:assignCheckbox" checked="false" />
  	</webtest>

  	<webtest name="testMPL_EditUser_AssignSubscriptionWithRoles">
  	  <mpl_login.user mid="${mId}" userId="${supplierUserId}" />
      <setup:subscription.create subId="aaa111" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService3" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService4" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService5" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService6" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService7" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService8" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService9" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService10" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService11" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService12" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService13" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService14" marketplaceId="${mId}" serviceKey="${svcKey3}" />
      <setup:subscription.create subId="subRoleService15" marketplaceId="${mId}" serviceKey="${svcKey3}" />
  	  <mpl_goto.account.users />
  	  <mpl_user.display userId="${usernameB}" />
      <setCheckbox htmlId="editUserForm:subscriptionTable:aaa111:assignCheckbox" checked="true" />
      <clickLink htmlId="editUserForm:subscriptionTable:userSubscriptions_ds_2" />
      <clickLink htmlId="editUserForm:saveButtonLink" />
      <common.handleMessageParameters property="infoMsg" value="${info.user.saved}" att0="${usernameB}" />
      <common.verifySuccess label="#{infoMsg}" />
  	</webtest>

    <webtest name="testMPL_UserCustomer_finalCleanup">
      <scenario.cleanUpLeftServicesIfAny url="${supplierUrl}" uId="${supplierUserId}" />
    </webtest>

  </target>
</project>
